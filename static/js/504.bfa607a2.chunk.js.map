{"version":3,"file":"static/js/504.bfa607a2.chunk.js","mappings":"2RAEaA,EAAmBC,EAAAA,EAAAA,IAAH,oIAQhBC,EAAQD,EAAAA,EAAAA,IAAH,8KASLE,EAAUF,EAAAA,EAAAA,IAAH,qEAKPG,EAAOH,EAAAA,EAAAA,IAAH,6CAIJI,EAAQJ,EAAAA,EAAAA,GAAH,0FAMLK,EAAUL,EAAAA,EAAAA,IAAH,yFAQPM,EAAQN,EAAAA,EAAAA,IAAH,yFAQLO,EAAWP,EAAAA,EAAAA,IAAH,yFAQRQ,EAASR,EAAAA,EAAAA,GAAH,qKAaNS,EAAaT,EAAAA,EAAAA,GAAH,sB,SCKvB,EA5DmB,SAAC,GAAe,IAAbU,EAAY,EAAZA,MACpB,SAQIA,QARJ,IAQIA,EAAAA,EAAS,CAAC,EAPZC,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,aACAC,EANF,EAMEA,SACAC,EAPF,EAOEA,OAGEC,EAAiC,GAAvBC,OAAOJ,GAErB,OACE,UAAChB,EAAD,YACE,SAACE,EAAD,CACEmB,MAAO,CACLC,gBAAgB,2CAAD,OAA6CT,EAA7C,SAInB,SAACV,EAAD,WACE,UAACC,EAAD,YACE,SAACC,EAAD,UAAQO,KAER,UAACN,EAAD,YACE,4BACE,uCACCQ,MAEH,4BACE,8CACCS,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,GAAST,GAAe,sBAIpC,UAACR,EAAD,YACE,2CADF,UAEMkB,KAAKC,MAAMP,GAFjB,SAKA,UAACX,EAAD,YACE,yCACCS,MAGH,UAACR,EAAD,YACE,uCACCS,EAAOS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,SAACnB,EAAD,WACE,yBAAMmB,KADSD,EADP,cAUvB,E,8BCvEYE,GAAe7B,EAAAA,EAAAA,GAAO8B,EAAAA,GAAP9B,CAAH,kQCDZ+B,EAAY,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAChC,OAAO,SAACJ,EAAD,CAAcK,GAAIF,EAAlB,SAAyBC,GACjC,EC2CD,EA9Be,WAAO,IAAD,IACXE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAqCE,EAAAA,EAAAA,yBAAwB,CAAEF,QAAAA,IAAvDG,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,QAEnBC,GAAWC,EAAAA,EAAAA,MACXC,EAAU,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4BC,EAAAA,EAAAA,KAI5C,OAFAC,QAAQC,IAAIL,IAGV,SAAC,KAAD,WACE,UAAC,KAAD,WACGH,IAAW,uCACZ,SAACT,EAAD,CAAWC,KAAMW,EAAjB,qBACCJ,GAAY,SAACU,EAAA,EAAD,KAAc,SAAC,EAAD,CAAYvC,MAAO4B,KAE9C,SAAC,KAAD,sCAEA,UAAC,KAAD,YACE,SAAC,KAAD,CAAMJ,GAAIY,EAAAA,EAAAA,KAAV,mBACA,SAAC,KAAD,CAAQZ,GAAIY,EAAAA,EAAAA,OAAZ,wBAEF,SAAC,EAAAI,SAAD,CAAUC,UAAU,SAACF,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,UAKT,C","sources":["components/AboutMovie/AboutMovie.styled.jsx","components/AboutMovie/AboutMovie.jsx","components/GoBackBtn/GoBackBtn.styled.jsx","components/GoBackBtn/GoBackBtn.jsx","page/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const AboutMovieStyled = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 20px;\n  background-color: #f0f0f0;\n  gap: 20px;\n`;\n\nexport const Image = styled.div`\n  width: 375px;\n  height: 550px;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 6px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Info = styled.div`\n  max-width: 900px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\n\nexport const Release = styled.div`\n  margin-bottom: 10px;\n\n  span {\n    font-weight: bold;\n  }\n`;\n\nexport const Score = styled.div`\n  margin-bottom: 10px;\n\n  span {\n    font-weight: bold;\n  }\n`;\n\nexport const Overview = styled.div`\n  margin-bottom: 10px;\n\n  span {\n    font-weight: bold;\n  }\n`;\n\nexport const Ganres = styled.ul`\n  margin-bottom: 10px;\n  display: flex;\n  gap: 5px;\n  padding-left: 0px;\n\n  list-style: none;\n\n  span {\n    font-weight: bold;\n  }\n`;\n\nexport const GanresItem = styled.li``;\n","import React from 'react';\nimport { format, parseISO } from 'date-fns';\n\nimport {\n  AboutMovieStyled,\n  Image,\n  Info,\n  Title,\n  Release,\n  Score,\n  Overview,\n  Ganres,\n  Wrapper,\n  GanresItem,\n} from './AboutMovie.styled';\n\nconst AboutMovie = ({ movie }) => {\n  const {\n    title,\n    poster_path,\n    status,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movie ?? {};\n\n  let percent = Number(vote_average) * 10;\n\n  return (\n    <AboutMovieStyled>\n      <Image\n        style={{\n          backgroundImage: `url(https://image.tmdb.org/t/p/original/${poster_path})`,\n        }}\n      />\n\n      <Wrapper>\n        <Info>\n          <Title>{title}</Title>\n\n          <Release>\n            <div>\n              <span>Status: </span>\n              {status}\n            </div>\n            <div>\n              <span>Release date: </span>\n              {format(parseISO(release_date), 'MMM dd yyyy')}\n            </div>\n          </Release>\n\n          <Score>\n            <span>User score: </span>\n            {`${Math.round(percent)}%`}\n          </Score>\n\n          <Overview>\n            <span>Overview: </span>\n            {overview}\n          </Overview>\n\n          <Ganres>\n            <span>Ganres: </span>\n            {genres.map(({ id, name }) => (\n              <GanresItem key={id}>\n                <div>{name}</div>\n              </GanresItem>\n            ))}\n          </Ganres>\n        </Info>\n      </Wrapper>\n    </AboutMovieStyled>\n  );\n};\n\nexport default AboutMovie;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const GoBackButton = styled(Link)`\n  margin-right: 10px;\n  background-color: #e0e0e0;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 4px;\n  cursor: pointer;\n\n  text-decoration: none;\n  color: #ff9800;\n\n  &:hover {\n    background-color: #d0d0d0;\n  }\n`;\n","import { GoBackButton } from './GoBackBtn.styled';\n\nexport const GoBackBtn = ({ path, children }) => {\n  return <GoBackButton to={path}>{children}</GoBackButton>;\n};\n","import React, { Suspense } from 'react';\n\nimport { useGetMovieDetailsQuery } from 'services/request/apiMovies';\nimport {\n  Section,\n  Container,\n  AdditionalInfo,\n  Cast,\n  Revies,\n  Additional,\n} from './Page.styled';\nimport Loading from 'components/Loading/Loading';\nimport AboutMovie from 'components/AboutMovie/AboutMovie';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { ROUTES } from 'services/routes';\nimport { GoBackBtn } from 'components/GoBackBtn/GoBackBtn';\n\nconst Movies = () => {\n  const { movieId } = useParams();\n  const { data, isLoading, isError } = useGetMovieDetailsQuery({ movieId });\n\n  const location = useLocation();\n  const goBackLink = location?.state?.from ?? ROUTES.HOME;\n\n  console.log(goBackLink);\n\n  return (\n    <Section>\n      <Container>\n        {isError && <div>Error...</div>}\n        <GoBackBtn path={goBackLink}>Go Back</GoBackBtn>\n        {isLoading ? <Loading /> : <AboutMovie movie={data} />}\n\n        <Additional>Additional information</Additional>\n\n        <AdditionalInfo>\n          <Cast to={ROUTES.CAST}>Cast</Cast>\n          <Revies to={ROUTES.REVIES}>Revies</Revies>\n        </AdditionalInfo>\n        <Suspense fallback={<Loading />}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </Section>\n  );\n};\n\nexport default Movies;\n"],"names":["AboutMovieStyled","styled","Image","Wrapper","Info","Title","Release","Score","Overview","Ganres","GanresItem","movie","title","poster_path","status","release_date","vote_average","overview","genres","percent","Number","style","backgroundImage","format","parseISO","Math","round","map","id","name","GoBackButton","Link","GoBackBtn","path","children","to","movieId","useParams","useGetMovieDetailsQuery","data","isLoading","isError","location","useLocation","goBackLink","state","from","ROUTES","console","log","Loading","Suspense","fallback"],"sourceRoot":""}