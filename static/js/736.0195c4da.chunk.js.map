{"version":3,"file":"static/js/736.0195c4da.chunk.js","mappings":"4PAEaA,EAAQC,EAAAA,EAAAA,IAAH,gXAsBLC,EAAOD,EAAAA,EAAAA,IAAH,yFAMJE,EAAQF,EAAAA,EAAAA,IAAH,4IAQLG,EAAOH,EAAAA,EAAAA,GAAH,0GAOJI,EAAYJ,EAAAA,EAAAA,GAAH,gJ,SCNtB,EAhCa,WACX,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAqCE,EAAAA,EAAAA,sBAAqB,CAAEF,QAAAA,IAApDG,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,QACjBC,GAASH,GAAQ,IAAjBG,KACR,OACE,gCACGD,IAAW,sCAEXD,GACC,SAACG,EAAA,EAAD,KAEA,SAACb,EAAD,UACGY,EAAKE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,UAAChB,EAAD,YACE,SAACC,EAAD,CACEgB,MAAO,CACLC,gBAAgB,2CAAD,OAA6CJ,EAA7C,SAGnB,SAACZ,EAAD,UAAOa,KACP,UAACZ,EAAD,YACE,0CACCa,OATMH,EADH,QAkBnB,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Cards = styled.div`\n  display: flex;\n  overflow-x: auto;\n  gap: 20px;\n  padding: 20px 0;\n  scroll-snap-type: x mandatory;\n\n  ::-webkit-scrollbar {\n    height: 6px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: #888;\n    border-radius: 3px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: #f0f0f0;\n    border-radius: 3px;\n  }\n`;\n\nexport const Item = styled.div`\n  flex-shrink: 0;\n  scroll-snap-align: start;\n  width: 200px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 250px;\n  background-size: cover;\n  background-position: center;\n  border-radius: 6px;\n`;\n\nexport const Name = styled.h2`\n  margin-top: 10px;\n  margin-bottom: 5px;\n  font-weight: bold;\n  color: #333;\n`;\n\nexport const Character = styled.h3`\n  font-size: 15px;\n  color: #ff9800;\n\n  span {\n    font-size: 16px;\n    font-weight: bold;\n    color: #333;\n  }\n`;\n","import Loading from 'components/Loading/Loading';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useGetMovieCastQuery } from 'services/request/apiMovies';\n\nimport { Cards, Item, Image, Name, Character } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const { data, isLoading, isError } = useGetMovieCastQuery({ movieId });\n  const { cast } = data || [];\n  return (\n    <>\n      {isError && <div>Error...</div>}\n\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <Cards>\n          {cast.map(({ id, profile_path, name, character }) => (\n            <Item key={id}>\n              <Image\n                style={{\n                  backgroundImage: `url(https://image.tmdb.org/t/p/original/${profile_path})`,\n                }}\n              />\n              <Name>{name}</Name>\n              <Character>\n                <span>Character: </span>\n                {character}\n              </Character>\n            </Item>\n          ))}\n        </Cards>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["Cards","styled","Item","Image","Name","Character","movieId","useParams","useGetMovieCastQuery","data","isLoading","isError","cast","Loading","map","id","profile_path","name","character","style","backgroundImage"],"sourceRoot":""}