{"version":3,"file":"static/js/496.e3bbacf7.chunk.js","mappings":"gOAGaA,EAAOC,EAAAA,EAAAA,IAAH,iGAOJC,GAAQD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,qWAoBLG,EAAQH,EAAAA,EAAAA,IAAH,sJAQLI,EAAUJ,EAAAA,EAAAA,IAAH,uFAMPK,EAAQL,EAAAA,EAAAA,GAAH,2GAQLM,EAAON,EAAAA,EAAAA,IAAH,4CAIJO,EAAcP,EAAAA,EAAAA,KAAH,kEAKXQ,EAAYR,EAAAA,EAAAA,KAAH,+D,6BCbtB,EAjCmB,SAAC,GAAgB,IAAdS,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,IAAIH,IAEV,+BACE,SAACX,EAAD,UACGU,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,WAAYC,EAAvC,EAAuCA,aAAvC,OACV,UAAClB,EAAD,CACEmB,GAAE,UAAKC,EAAAA,EAAAA,UAAL,YAAyBN,GAE3BO,MAAO,CAAEC,KAAMb,GAHjB,WAKE,SAACP,EAAD,CACEqB,MAAO,CACLC,gBAAgB,2CAAD,OAA6CT,EAA7C,SAInB,UAACZ,EAAD,YACE,SAACC,EAAD,UAAQY,KAER,UAACX,EAAD,YACE,SAACC,EAAD,UAAcY,KACd,UAACX,EAAD,0BAAwBU,aAdvBH,EAHG,OAyBnB,C,sKC5CYW,EAAmB1B,EAAAA,EAAAA,KAAH,gLAUhB2B,EAAY3B,EAAAA,EAAAA,OAAH,0OAcT4B,EAAkB5B,EAAAA,EAAAA,MAAH,8L,SCa5B,EA/BmB,SAAC,GAAkB,IAAhB6B,EAAe,EAAfA,SACpB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAWA,OACE,UAACN,EAAD,CAAkBG,SANC,SAAAI,GACnBA,EAAMC,iBACNL,EAASE,EACV,EAGC,WACE,SAACH,EAAD,CACEO,KAAK,SACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,MAAOT,EACPU,SAlBe,SAAAR,GACnBD,EAAeC,EAAMS,OAAOF,MAC7B,KAmBG,SAACb,EAAD,CAAWS,KAAK,SAAhB,UACE,SAAC,MAAD,CAAUO,KAAK,aAItB,ECUD,EAtCqB,WACnB,OAAsCb,EAAAA,EAAAA,UAAS,IAA/C,eAAOc,EAAP,KAAoBC,EAApB,KAOMC,EAAiB,SAAAN,GACrB,IAAMO,EAAS,IAAIC,gBAAgBC,OAAOvC,SAASwC,QACnDH,EAAOI,IAAI,QAASX,GACpB,IAAMY,EAAM,UAAMH,OAAOvC,SAAS2C,SAAtB,YAAkCN,EAAOO,YACrDL,OAAOM,QAAQC,aAAa,CAAC,EAAG,GAAIJ,EACrC,EAED,GAAqCK,EAAAA,EAAAA,mBAAkB,CACrDC,MAAOd,GAAe,KADhBe,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,QAIjBC,GAAYH,GAAQ,CAAC,GAArBG,QAER,OACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,EAAD,CAAYjC,SArBG,SAAAW,GACnBK,EAAeL,GACfM,EAAeN,EAChB,IAmBMqB,IAAW,sCACXD,GACC,SAACG,EAAA,EAAD,IACqB,IAAnBD,EAAQE,QACV,sEAEA,SAACC,EAAA,EAAD,CAAYxD,OAAQqD,QAK7B,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SerchForm/SearchForm.styled.jsx","components/SerchForm/SearchForm.jsx","page/MoviesSearch.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.div`\n  margin-top: 24px;\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n\nexport const Movie = styled(Link)`\n  background: white;\n  border-radius: 8px;\n  overflow: hidden;\n  width: calc(100% / 5 - 20px);\n  position: relative;\n\n  :nth-of-type(5n) {\n    width: calc(100% / 5);\n  }\n\n  :hover,\n  :focus {\n    box-shadow: 0px 1px 6px #ff9800;\n    transition: 200ms cubic-bezier(0.65, 0.05, 0.36, 1);\n  }\n\n  text-decoration: none;\n`;\n\nexport const Image = styled.div`\n  width: 100%;\n  height: 410px;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport const Wrapper = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Title = styled.h3`\n  font-size: 18px;\n  font-weight: bold;\n  margin-bottom: 5px;\n\n  color: #333;\n`;\n\nexport const Info = styled.div`\n  font-size: 14px;\n`;\n\nexport const ReleaseDate = styled.span`\n  margin-right: 10px;\n  color: #ff9800;\n`;\n\nexport const VoteCount = styled.span`\n  margin-top: 5px;\n  color: #ff9800;\n`;\n","import React from 'react';\n\nimport {\n  List,\n  Movie,\n  Image,\n  Wrapper,\n  Title,\n  Info,\n  ReleaseDate,\n  VoteCount,\n} from './MoviesList.styled';\nimport { ROUTES } from 'services/routes';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  console.log(location);\n  return (\n    <>\n      <List>\n        {movies.map(({ id, poster_path, title, vote_count, release_date }) => (\n          <Movie\n            to={`${ROUTES.MOVIES_ID}/${id}`}\n            key={id}\n            state={{ from: location }}\n          >\n            <Image\n              style={{\n                backgroundImage: `url(https://image.tmdb.org/t/p/original/${poster_path})`,\n              }}\n            />\n\n            <Wrapper>\n              <Title>{title}</Title>\n\n              <Info>\n                <ReleaseDate>{release_date}</ReleaseDate>\n                <VoteCount>Vote count: {vote_count}</VoteCount>\n              </Info>\n            </Wrapper>\n          </Movie>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default MoviesList;\n","import styled from '@emotion/styled';\n\nexport const SearchFormStyled = styled.form`\n  display: flex;\n  align-items: center;\n  max-width: 400px;\n  margin: 0 auto;\n  background-color: #f0f0f0;\n  border-radius: 4px;\n  padding: 5px;\n`;\n\nexport const SearchBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: transparent;\n  border: none;\n  padding: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #e0e0e0;\n  }\n`;\n\nexport const SearchFormInput = styled.input`\n  flex: 1;\n  border: none;\n  background-color: transparent;\n  font-size: 14px;\n  padding: 5px;\n  outline: none;\n\n  &::placeholder {\n    color: #888888;\n  }\n`;\n","import React, { useState } from 'react';\nimport { FiSearch } from 'react-icons/fi';\nimport {\n  SearchFormStyled,\n  SearchBtn,\n  SearchFormInput,\n} from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [searchInput, setSearchInput] = useState('');\n\n  const handleChange = event => {\n    setSearchInput(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(searchInput);\n  };\n\n  return (\n    <SearchFormStyled onSubmit={handleSubmit}>\n      <SearchFormInput\n        name=\"search\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search images and photos\"\n        value={searchInput}\n        onChange={handleChange}\n      />\n\n      <SearchBtn type=\"submit\">\n        <FiSearch size=\"15px\" />\n      </SearchBtn>\n    </SearchFormStyled>\n  );\n};\n\nexport default SearchForm;\n","import React, { useState } from 'react';\nimport { Section, Container } from './Page.styled';\n\nimport { useGetSearchQuery } from 'services/request/apiMovies';\n\nimport Loading from 'components/Loading/Loading';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from 'components/SerchForm/SearchForm';\n\nconst MoviesSearch = () => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const handleSearch = value => {\n    setSearchValue(value);\n    updateURLQuery(value);\n  };\n\n  const updateURLQuery = value => {\n    const params = new URLSearchParams(window.location.search);\n    params.set('query', value);\n    const newUrl = `${window.location.pathname}?${params.toString()}`;\n    window.history.replaceState({}, '', newUrl);\n  };\n\n  const { data, isLoading, isError } = useGetSearchQuery({\n    query: searchValue || '',\n  });\n\n  const { results } = data || {};\n\n  return (\n    <Section>\n      <Container>\n        <SearchForm onSubmit={handleSearch} />\n        {isError && <div>Error...</div>}\n        {isLoading ? (\n          <Loading />\n        ) : results.length === 0 ? (\n          <div>{`No movie(s) were found for this request`}</div>\n        ) : (\n          <MoviesList movies={results} />\n        )}\n      </Container>\n    </Section>\n  );\n};\n\nexport default MoviesSearch;\n"],"names":["List","styled","Movie","Link","Image","Wrapper","Title","Info","ReleaseDate","VoteCount","movies","location","useLocation","console","log","map","id","poster_path","title","vote_count","release_date","to","ROUTES","state","from","style","backgroundImage","SearchFormStyled","SearchBtn","SearchFormInput","onSubmit","useState","searchInput","setSearchInput","event","preventDefault","name","type","autoComplete","autoFocus","placeholder","value","onChange","target","size","searchValue","setSearchValue","updateURLQuery","params","URLSearchParams","window","search","set","newUrl","pathname","toString","history","replaceState","useGetSearchQuery","query","data","isLoading","isError","results","Loading","length","MoviesList"],"sourceRoot":""}