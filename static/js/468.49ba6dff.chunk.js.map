{"version":3,"file":"static/js/468.49ba6dff.chunk.js","mappings":"gOAGaA,EAAOC,EAAAA,EAAAA,IAAH,iGAOJC,GAAQD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,qWAoBLG,EAAQH,EAAAA,EAAAA,IAAH,sJAQLI,EAAUJ,EAAAA,EAAAA,IAAH,uFAMPK,EAAQL,EAAAA,EAAAA,GAAH,2GAQLM,EAAON,EAAAA,EAAAA,IAAH,4CAIJO,EAAcP,EAAAA,EAAAA,KAAH,kEAKXQ,EAAYR,EAAAA,EAAAA,KAAH,+D,6BCXtB,EAjCmB,SAAC,GAAgB,IAAdS,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,IAAIH,IAEV,+BACE,SAACX,EAAD,UACGU,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,WAAYC,EAAvC,EAAuCA,aAAvC,OACV,UAAClB,EAAD,CACEmB,GAAE,UAAKC,EAAAA,EAAAA,UAAL,YAAyBN,GAE3BO,MAAO,CAAEC,KAAMb,GAHjB,WAKE,SAACP,EAAD,CACEqB,MAAO,CACLC,gBAAgB,2CAAD,OAA6CT,EAA7C,SAInB,UAACZ,EAAD,YACE,SAACC,EAAD,UAAQY,KAER,UAACX,EAAD,YACE,SAACC,EAAD,UAAcY,KACd,UAACX,EAAD,0BAAwBU,aAdvBH,EAHG,OAyBnB,C,0FCrBD,UArBa,WACX,OAAqCW,EAAAA,EAAAA,4BAA7BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,QACjBC,GAAYH,GAAQ,CAAC,GAArBG,QAER,OACE,SAAC,KAAD,WACE,UAAC,KAAD,WACGD,IAAW,sCACXD,GACC,SAAC,IAAD,KAEA,iCACE,4CACCE,IAAY,KAAM,SAAC,IAAD,CAAYrB,OAAQqB,WAMlD,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","page/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.div`\n  margin-top: 24px;\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n\nexport const Movie = styled(Link)`\n  background: white;\n  border-radius: 8px;\n  overflow: hidden;\n  width: calc(100% / 5 - 20px);\n  position: relative;\n\n  :nth-of-type(5n) {\n    width: calc(100% / 5);\n  }\n\n  :hover,\n  :focus {\n    box-shadow: 0px 1px 6px #ff9800;\n    transition: 200ms cubic-bezier(0.65, 0.05, 0.36, 1);\n  }\n\n  text-decoration: none;\n`;\n\nexport const Image = styled.div`\n  width: 100%;\n  height: 410px;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport const Wrapper = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Title = styled.h3`\n  font-size: 18px;\n  font-weight: bold;\n  margin-bottom: 5px;\n\n  color: #333;\n`;\n\nexport const Info = styled.div`\n  font-size: 14px;\n`;\n\nexport const ReleaseDate = styled.span`\n  margin-right: 10px;\n  color: #ff9800;\n`;\n\nexport const VoteCount = styled.span`\n  margin-top: 5px;\n  color: #ff9800;\n`;\n","import React from 'react';\n\nimport {\n  List,\n  Movie,\n  Image,\n  Wrapper,\n  Title,\n  Info,\n  ReleaseDate,\n  VoteCount,\n} from './MoviesList.styled';\nimport { ROUTES } from 'services/routes';\nimport { useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  console.log(location);\n  return (\n    <>\n      <List>\n        {movies.map(({ id, poster_path, title, vote_count, release_date }) => (\n          <Movie\n            to={`${ROUTES.MOVIES_ID}/${id}`}\n            key={id}\n            state={{ from: location }}\n          >\n            <Image\n              style={{\n                backgroundImage: `url(https://image.tmdb.org/t/p/original/${poster_path})`,\n              }}\n            />\n\n            <Wrapper>\n              <Title>{title}</Title>\n\n              <Info>\n                <ReleaseDate>{release_date}</ReleaseDate>\n                <VoteCount>Vote count: {vote_count}</VoteCount>\n              </Info>\n            </Wrapper>\n          </Movie>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React from 'react';\nimport { Section, Container } from './Page.styled';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useGetTrendingMovieQuery } from 'services/request/apiMovies';\nimport Loading from 'components/Loading/Loading';\n\nconst Home = () => {\n  const { data, isLoading, isError } = useGetTrendingMovieQuery();\n  const { results } = data || {};\n\n  return (\n    <Section>\n      <Container>\n        {isError && <div>Error...</div>}\n        {isLoading ? (\n          <Loading />\n        ) : (\n          <>\n            <h1>Treanding Today</h1>\n            {results !== [] && <MoviesList movies={results} />}\n          </>\n        )}\n      </Container>\n    </Section>\n  );\n};\n\nexport default Home;\n"],"names":["List","styled","Movie","Link","Image","Wrapper","Title","Info","ReleaseDate","VoteCount","movies","location","useLocation","console","log","map","id","poster_path","title","vote_count","release_date","to","ROUTES","state","from","style","backgroundImage","useGetTrendingMovieQuery","data","isLoading","isError","results"],"sourceRoot":""}